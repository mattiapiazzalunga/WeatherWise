server.port=9101

spring.application.name=api-gateway

spring.cloud.gateway.routes[0].id=meteo
spring.cloud.gateway.routes[0].uri=lb://meteo
spring.cloud.gateway.routes[0].predicates[0]=Path=/meteo/**
spring.cloud.gateway.routes[0].filters[0]=name:CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=meteo
spring.cloud.gateway.routes[0].filters[0].args.fallbackuri=forward:/meteoFallBack

spring.cloud.gateway.routes[1].id=feedbacks
spring.cloud.gateway.routes[1].uri=lb://feedbacks
spring.cloud.gateway.routes[1].predicates[0]=Path=/feedbacks/**
spring.cloud.gateway.routes[1].filters[0]=name:CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=feedbacks
spring.cloud.gateway.routes[1].filters[0].args.fallbackuri=forward:/feedbacksFallBack

spring.cloud.gateway.routes[2].id=places
spring.cloud.gateway.routes[2].uri=lb://places
spring.cloud.gateway.routes[2].predicates[0]=Path=/places/**
spring.cloud.gateway.routes[2].filters[0]=name:CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=places
spring.cloud.gateway.routes[2].filters[0].args.fallbackuri=forward:/placesFallBack

spring.cloud.gateway.routes[3].id=cities
spring.cloud.gateway.routes[3].uri=lb://cities
spring.cloud.gateway.routes[3].predicates[0]=Path=/cities/**
spring.cloud.gateway.routes[3].filters[0]=name:CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.name=cities
spring.cloud.gateway.routes[3].filters[0].args.fallbackuri=forward:/citiesFallBack

hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds=4000

management.endpoints.web.exposure.include=hystrix.stream

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
